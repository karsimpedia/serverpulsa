name: engine-pulsa

services:
  postgres:
    image: postgres:16-alpine
    container_name: pulsa_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pulsa}
      POSTGRES_USER: ${POSTGRES_USER:-pulsa}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pulsa}
    ports:
      - "${PG_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 30

  redis:
    image: redis:7-alpine
    container_name: pulsa_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30

  # Jalankan migrasi Prisma sekali sebelum api/worker start
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pulsa_migrate
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      # ⬇️ FIX: hapus '}' di akhir
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-pulsa}:${POSTGRES_PASSWORD:-pulsa}@postgres:5432/${POSTGRES_DB:-pulsa}?schema=public}
    command: ["sh", "-c", "npx prisma generate && npx prisma migrate deploy"]
    restart: "no"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pulsa_api
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: ${PORT:-3000}
      # ⬇️ FIX: hapus '}' di akhir
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-pulsa}:${POSTGRES_PASSWORD:-pulsa}@postgres:5432/${POSTGRES_DB:-pulsa}?schema=public}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
    ports:
      - "${PORT:-3000}:3000"
    command: ["node", "api/api.js"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 20
      start_period: 10s

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pulsa_worker
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      # ⬇️ FIX: hapus '}' di akhir
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-pulsa}:${POSTGRES_PASSWORD:-pulsa}@postgres:5432/${POSTGRES_DB:-pulsa}?schema=public}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      # opsional: set concurrency utk BullMQ worker
      WORKER_CONCURRENCY: ${WORKER_CONCURRENCY:-5}
    # ⬇️ Samakan dengan file worker kamu (pilih salah satu):
    command: ["node", "worker/index.js"]
    # command: ["node", "worker/worker.js"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "node -e \"process.exit(0)\""]
      interval: 15s
      timeout: 3s
      retries: 20
      start_period: 5s

volumes:
  pgdata:
  redisdata:
